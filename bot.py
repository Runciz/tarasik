
import telebot
import openai
import os

# üîë –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏ —á–∞—Ç ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤—à–∏–≤–∞–µ–º –≤—Ä—É—á–Ω—É—é
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ALLOWED_CHAT_ID = -1001678704994  # ‚Üê –¢–æ–ª—å–∫–æ —ç—Ç–æ—Ç Telegram-—á–∞—Ç

# üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = telebot.TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞
with open("clean_chat.txt", "r", encoding="utf-8") as f:
    base_context = f.read()

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –æ—Ç–≤–µ—á–∞—Ç—å –ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
def should_respond(message):
    if message.chat.id != ALLOWED_CHAT_ID:
        return False
    if not message.text:
        return False
    try:
        bot_username = bot.get_me().username
    except Exception:
        return False
    return f"@{bot_username}" in message.text

# üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç GPT
def generate_reply(user_input):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": base_context},
            {"role": "user", "content": user_input}
        ],
        temperature=0.7,
        max_tokens=500
    )
    return response.choices[0].message["content"]

# üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=should_respond)
def handle_message(message):
    try:
        reply = generate_reply(message.text)
        bot.reply_to(message, reply)
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è Kƒº≈´da: {str(e)}")

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —á–∞—Ç...")
bot.polling()
